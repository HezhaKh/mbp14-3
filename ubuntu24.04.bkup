# Auth: Hezha
# Date: Sep 28th 2025
# Updated:
# Purpose: custom ubuntu 24.04 configuration to fix issues with 2017 mbp14-3 (Wi-Fi signal strenght, soundboard issues, dGPU, fan, touch bar)

bash -c '
set -euo pipefail

# Figure out the real login user (when running with sudo)
TARGET_USER="${SUDO_USER:-$USER}"
TARGET_HOME="$(getent passwd "$TARGET_USER" | cut -d: -f6)"

if [ "$(id -u)" -ne 0 ]; then
  err "Please run with sudo: sudo bash ./this_script.sh"
  exit 1
fi

log "System prep"
apt-get update -y
apt-get install -y curl wget git build-essential dkms linux-headers-$(uname -r) \
  software-properties-common ca-certificates zstd

### ---------- Wi-Fi: Broadcom BCM43602 (Apple board/NVRAM file) ----------
log "Wi-Fi: ensuring Apple BCM43602 board file & firmware are present"
apt-get install -y --reinstall linux-firmware
install -d -m 0755 /lib/firmware/brcm
cd /lib/firmware/brcm

# Clean any 0-byte mistakes
find . -maxdepth 1 -type f -size 0 -name "brcmfmac43602-pcie*" -delete || true

# Apple model-specific calibration (Bugzilla attachment for MBP14,3)
APPLE_TXT="brcmfmac43602-pcie.Apple Inc.-MacBookPro14,3.txt"
if ! [ -s "$APPLE_TXT" ]; then
  log "Fetching Apple NVRAM board file for MBP14,3"
  wget -qO "$APPLE_TXT" "https://raw.githubusercontent.com/HezhaKh/mbp14-3/refs/heads/main/brcmfmac43602-pcie.txt"
fi
ln -sfn "$APPLE_TXT" brcmfmac43602-pcie.txt
chmod 0644 "$APPLE_TXT" brcmfmac43602-pcie.txt || true

# Gentle reload of brcmfmac (may be in use; do best-effort)
systemctl stop NetworkManager || true
ip link set wlp3s0 down 2>/dev/null || true
modprobe -r brcmfmac brcmutil cfg80211 2>/dev/null || true
modprobe brcmfmac 2>/dev/null || true
systemctl start NetworkManager || true

### ---------- Audio: Cirrus CS8409 (speakers/mic) ----------
log "Audio: installing Cirrus CS8409 DKMS and forcing legacy HDA path"
# Kernel headers for current kernel (again, after potential kernel change)
apt-get install -y "linux-headers-$(uname -r)" linux-source || true

# Modprobe configs to force legacy HDA and keep SOF/AVS away
tee /etc/modprobe.d/99-intel-dsp.conf >/dev/null <<EOF
options snd-intel-dspcfg dsp_driver=1
EOF
tee /etc/modprobe.d/10-disable-sof-avs.conf >/dev/null <<EOF
blacklist snd_soc_avs
blacklist snd_soc_hda_codec
blacklist snd_sof_pci_intel_skl
blacklist snd_sof_intel_hda_common
blacklist snd_sof_pci
blacklist snd_sof
EOF
tee /etc/modprobe.d/99-hda.conf >/dev/null <<EOF
options snd_hda_intel enable_msi=1 power_save=0 dmic_detect=0 position_fix=1
EOF

# Build & install CS8409 DKMS
WORKDIR="$TARGET_HOME/.mbp-setup"
install -d -m 0755 "$WORKDIR"
cd "$WORKDIR"
if [ -d snd_hda_macbookpro ]; then rm -rf snd_hda_macbookpro; fi
git clone https://github.com/davidjo/snd_hda_macbookpro
cd snd_hda_macbookpro
bash ./install.cirrus.driver.sh || {
  warn "CS8409 installer returned non-zero; proceeding (re-run after reboot if needed)."
}

# Make sure user can use audio from SSH too (optional, harmless)
usermod -aG audio,video,render "$TARGET_USER" || true

### ---------- Touch Bar (2016/2017 non-T2) ----------
log "Touch Bar: applespi + apple_ib_tb DKMS for 2016/2017 MBP"
cd "$WORKDIR"
if [ -d macbook12-spi-driver ]; then rm -rf macbook12-spi-driver; fi
git clone https://github.com/almas/macbook12-spi-driver
cd macbook12-spi-driver
# Branch with apple_ib_tb + HID bits that build on Ubuntu 24.04 GA (6.8+) nicely
git checkout touchbar-driver-hid-driver || true
# DKMS install (applespi/0.1)
ln -sfn "$(pwd)" /usr/src/applespi-0.1
dkms remove applespi/0.1 --all 2>/dev/null || true
dkms install applespi/0.1 --force || warn "DKMS applespi installation reported non-zero; continuing"

# Preload modules in initramfs
grep -q "^applespi$" /etc/initramfs-tools/modules 2>/dev/null || cat >>/etc/initramfs-tools/modules <<EOF

# Touchpad/keyboard + Touch Bar for 2016/2017 MBP
applespi
apple_ib_tb
intel_lpss_pci
spi_pxa2xx_platform
EOF

# Touch Bar parameters (F-keys default; hold Fn for media)
tee /etc/modprobe.d/apple_ib_tb.conf >/dev/null <<EOF
options apple_ib_tb fnmode=2 idle_timeout=60
EOF

# Optional service that nudges the Apple USB interface on boot (helps some 14,3)
cat >/usr/local/sbin/mbp-touchbar-nudge.sh << "EOS"
#!/usr/bin/env bash
set -euo pipefail
# Find Apple USB interfaces and unbind/bind once; harmless if none
for d in /sys/bus/usb/devices/*; do
  if [ -f "$d/manufacturer" ] && grep -qi "apple" "$d/manufacturer"; then
    b="$(basename "$d")"
    echo "$b" > /sys/bus/usb/drivers/usb/unbind 2>/dev/null || true
    echo "$b" > /sys/bus/usb/drivers/usb/bind   2>/dev/null || true
  fi
done
exit 0
EOS
chmod +x /usr/local/sbin/mbp-touchbar-nudge.sh

cat >/etc/systemd/system/mbp-touchbar-nudge.service << "EOF"
[Unit]
Description=MacBookPro14,x Touch Bar USB nudge
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/local/sbin/mbp-touchbar-nudge.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
# Enable but this is safe/instant
systemctl enable mbp-touchbar-nudge.service || true

### ---------- Firmware and housekeeping ----------
log "Finalize: firmware refresh & initramfs update"
apt-get install -y --reinstall linux-firmware
update-initramfs -u

log "All done. Recommended next steps:
 - REBOOT to ensure new kernel/modules/params are active.
 - After reboot:
     * Wi-Fi: should be strong/5 GHz capable (brcmfmac + Apple board file).
     * Audio: should show \"CS8409/CS42L83 Analog\" and work in PipeWire.
     * Touch Bar: should be lit; if not, the nudge service will try once at boot.
"

'
