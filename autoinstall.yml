#cloud-config
autoinstall:
  version: 1
  refresh-installer: true

  source:
    id: ubuntu-desktop

  locale: en_CA.UTF-8
  keyboard:
    layout: us
  timezone: America/Toronto

  identity:
    hostname: m143
    username: hkh
    # REPLACE with your own SHA-512 hash before using!
    # e.g. python3 - <<'PY' ; import crypt,getpass ; print(crypt.crypt(getpass.getpass(), crypt.mksalt(crypt.METHOD_SHA512))) ; PY
    password: "$6$REPLACE_WITH_YOUR_SHA512_HASH"

  ssh:
    install-server: true
    allow-pw: true

  apt:
    primary:
      - arches: [amd64]
        uri: http://ca.archive.ubuntu.com/ubuntu
    security:
      - arches: [amd64]
        uri: http://security.ubuntu.com/ubuntu/

  packages:
    - build-essential
    - dkms
    - linux-headers-generic
    - linux-source
    - git
    - btrfs-progs
    - curl
    - wget
    - ca-certificates
    - software-properties-common
    - network-manager
    - pipewire-audio
    - wireplumber
    - alsa-utils
    - alsa-ucm-conf
    - libasound2t64
    - linux-firmware
    - fwupd
    - openssh-server

  drivers:
    install: true

  storage:
    version: 1
    config:
      - id: disk-nvme
        type: disk
        match: { path: /dev/nvme0n1 }
        ptable: gpt
        grub_device: true
        preserve: true

      - id: esp-part
        type: partition
        match: { path: /dev/nvme0n1p1 }
        preserve: true
        grub_device: true
      - id: esp-fs
        type: format
        volume: esp-part
        fstype: fat32
        preserve: true
      - id: esp-mount
        type: mount
        device: esp-fs
        path: /boot/efi

      - id: macos-part
        type: partition
        match: { path: /dev/nvme0n1p2 }
        preserve: true

      - id: swap-part
        type: partition
        match: { path: /dev/nvme0n1p3 }
        preserve: true
      - id: swap-fs
        type: format
        volume: swap-part
        fstype: swap
        preserve: true
      - id: swap-mount
        type: mount
        device: swap-fs
        path: none

      - id: root-part
        type: partition
        match: { path: /dev/nvme0n1p4 }
        preserve: true
      - id: root-fs
        type: format
        volume: root-part
        fstype: btrfs
        label: ubuntu-root
      - id: root-mount
        type: mount
        device: root-fs
        path: /

  interactive-sections: []

  late-commands:
    - curtin in-target -- bash -euxc 'printf "KVER=\\"%s\\"\\n" "" > /etc/default/mbp-mainline'

    - curtin in-target -- bash -euxc '
        apt-get update;
        install -d -m 0755 /lib/firmware/brcm;
        curl -fsSL -o "/lib/firmware/brcm/brcmfmac43602-pcie.Apple Inc.-MacBookPro14,3.txt" "https://bugzilla.kernel.org/attachment.cgi?id=290569" || true;
        ln -sfn "brcmfmac43602-pcie.Apple Inc.-MacBookPro14,3.txt" /lib/firmware/brcm/brcmfmac43602-pcie.txt || true;

        printf "%s\n" "options snd-intel-dspcfg dsp_driver=1" > /etc/modprobe.d/99-intel-dsp.conf;
        printf "%s\n" \
          "blacklist snd_soc_avs" \
          "blacklist snd_sof_pci_intel_skl" \
          "blacklist snd_sof_intel_hda_common" \
          "blacklist snd_sof_pci" \
          "blacklist snd_sof" > /etc/modprobe.d/10-disable-sof-avs.conf;
        printf "%s\n" "options snd_hda_intel enable_msi=1 power_save=0 dmic_detect=0 position_fix=2" > /etc/modprobe.d/99-hda.conf;

        cd /root;
        rm -rf snd_hda_macbookpro;
        git clone https://github.com/davidjo/snd_hda_macbookpro;
        cd snd_hda_macbookpro;
        ./install.cirrus.driver.sh || true;

        echo -e "\n# applespi\napplespi\nspi_pxa2xx_platform\nintel_lpss_pci" >> /etc/initramfs-tools/modules;
        rm -rf /usr/src/applespi-0.1;
        git clone https://github.com/roadrunner2/macbook12-spi-driver.git /usr/src/applespi-0.1;
        dkms install -m applespi -v 0.1 || true;
      '

    - curtin in-target -- bash -euxc '
        . /etc/default/mbp-mainline || true;
        if [ -n "${KVER:-}" ]; then
          add-apt-repository -y ppa:cappelikan/ppa || true;
          apt-get update || true;
          apt-get install -y mainline || true;
          mainline install --yes --install-version "$KVER" || mainline install --yes --install-latest || true;
        fi
      '

    - curtin in-target -- update-initramfs -u

  user-data:
    package_update: true
    package_upgrade: false
